<?xml version="1.0"?>
<!-- 使用 Xacro -->
<robot name="tracked_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- ======================= 通用参数 ====================== -->
  <!-- 车身 -->
  <xacro:property name="body_l" value="1.45"/>
  <xacro:property name="body_w" value="1.33"/>
  <xacro:property name="body_h" value="1.12"/>
  <xacro:property name="mass_body" value="8.0"/>
  <!-- 履带 -->
  <xacro:property name="track_w" value="0.15"/>      <!-- 履带宽度 -->
  <xacro:property name="sprocket_r" value="0.18"/>   <!-- 前后驱动/导向轮半径 -->
  <xacro:property name="road_wheel_r" value="0.08"/>  <!-- 中间负重轮半径 -->
  <xacro:property name="track_base_l" value="1.1"/>   <!-- 轮子中心距 (前后轮之间) -->
  <xacro:property name="num_road_wheels" value="3"/>  <!-- 中间负重轮数量 -->
  <xacro:property name="wheel_separation_y" value="${body_w / 2.0}"/> <!-- 履带中心到车中心的Y距离 -->
  <!-- 轮子中心 Z 坐标: 假设 base_link 原点在几何中心 -->
  <xacro:property name="wheels_z_offset" value="-${body_h/2 - road_wheel_r}"/>
  <xacro:property name="mass_sprocket" value="1.0"/>
  <xacro:property name="mass_road_wheel" value="0.5"/>

  <!-- ======================= 链接 ========================= -->
  <!-- 底盘本体 -->
  <link name="base_link">
    <inertial>
      <mass value="${mass_body}"/>
      <!-- Base link origin is at geometric center -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${1/12*mass_body*(body_w*body_w + body_h*body_h)}"
               iyy="${1/12*mass_body*(body_l*body_l + body_h*body_h)}"
               izz="${1/12*mass_body*(body_l*body_l + body_w*body_w)}"
               ixy="0" ixz="0" iyz="0"/>
    </inertial>
    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry><box size="${body_l} ${body_w} ${body_h}"/></geometry>
      <material name="grey"/>
    </visual>
    <collision>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry><box size="${body_l} ${body_w} ${body_h}"/></geometry>
    </collision>
  </link>

  <!-- 履带构建宏 -->
  <xacro:macro name="track_side" params="prefix reflect_y">

    <!-- 前驱动/导向轮 -->
    <link name="${prefix}_sprocket_front">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry><cylinder radius="${sprocket_r}" length="${track_w}"/></geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry><cylinder radius="${sprocket_r}" length="${track_w}"/></geometry>
      </collision>
      <inertial>
         <mass value="${mass_sprocket}"/>
         <origin xyz="0 0 0" rpy="${pi/2} 0 0"/> <!-- Cylinder inertia centered -->
         <inertia ixx="${(1/12)*mass_sprocket*(3*sprocket_r*sprocket_r + track_w*track_w)}"
                  iyy="${(1/12)*mass_sprocket*(3*sprocket_r*sprocket_r + track_w*track_w)}"
                  izz="${(1/2)*mass_sprocket*sprocket_r*sprocket_r}"
                  ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>
    <joint name="${prefix}_sprocket_front_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_sprocket_front"/>
      <origin xyz="${track_base_l/2} ${reflect_y * wheel_separation_y} ${wheels_z_offset}" rpy="0 0 0"/>
    </joint>

    <!-- 后驱动/导向轮 -->
    <link name="${prefix}_sprocket_back">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry><cylinder radius="${sprocket_r}" length="${track_w}"/></geometry>
        <material name="black"/>
      </visual>
       <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry><cylinder radius="${sprocket_r}" length="${track_w}"/></geometry>
      </collision>
      <inertial>
         <mass value="${mass_sprocket}"/>
         <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
         <inertia ixx="${(1/12)*mass_sprocket*(3*sprocket_r*sprocket_r + track_w*track_w)}"
                  iyy="${(1/12)*mass_sprocket*(3*sprocket_r*sprocket_r + track_w*track_w)}"
                  izz="${(1/2)*mass_sprocket*sprocket_r*sprocket_r}"
                  ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>
    <joint name="${prefix}_sprocket_back_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_sprocket_back"/>
      <origin xyz="-${track_base_l/2} ${reflect_y * wheel_separation_y} ${wheels_z_offset}" rpy="0 0 0"/>
    </joint>

    <!-- 中间负重轮 -->
    <xacro:if value="${num_road_wheels > 0}">
      <xacro:property name="road_wheel_spacing" value="${track_base_l / (num_road_wheels + 1)}"/>
      <xacro:macro name="road_wheel" params="n">
        <link name="${prefix}_road_wheel_${n}">
          <visual>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry><cylinder radius="${road_wheel_r}" length="${track_w}"/></geometry>
            <material name="black"/>
          </visual>
           <collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            <geometry><cylinder radius="${road_wheel_r}" length="${track_w}"/></geometry>
          </collision>
          <inertial>
             <mass value="${mass_road_wheel}"/>
             <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
             <inertia ixx="${(1/12)*mass_road_wheel*(3*road_wheel_r*road_wheel_r + track_w*track_w)}"
                      iyy="${(1/12)*mass_road_wheel*(3*road_wheel_r*road_wheel_r + track_w*track_w)}"
                      izz="${(1/2)*mass_road_wheel*road_wheel_r*road_wheel_r}"
                      ixy="0" ixz="0" iyz="0"/>
          </inertial>
        </link>
        <joint name="${prefix}_road_wheel_${n}_joint" type="fixed">
          <parent link="base_link"/>
          <child link="${prefix}_road_wheel_${n}"/>
          <!-- Place road wheels lower than sprockets -->
          <origin xyz="${track_base_l/2 - n*road_wheel_spacing} ${reflect_y * wheel_separation_y} ${wheels_z_offset - (sprocket_r - road_wheel_r)}" rpy="0 0 0"/>
        </joint>
      </xacro:macro>
      <!-- Generate road wheels using loop (requires newer xacro) -->
      <!-- For older xacro, manually call like this -->
      <xacro:road_wheel n="1"/>
      <xacro:road_wheel n="2"/>
      <xacro:road_wheel n="3"/>
    </xacro:if>

  </xacro:macro>

  <!-- ================== 生成履带两侧 ================== -->
  <xacro:track_side prefix="left"  reflect_y="1"/>
  <xacro:track_side prefix="right" reflect_y="-1"/>

  <!-- 定义材料 -->
  <material name="black"><color rgba="0.05 0.05 0.05 1"/></material>
  <material name="grey"><color rgba="0.2 0.2 0.2 1"/></material>

  <!-- 虚拟驱动关节 (用于 ros2_control, 不影响物理树) -->
  <!-- These are needed if/when ros2_control block is uncommented -->
  <!--
  <joint name="left_track_driver_joint" type="continuous">
      <parent link="base_link"/>
      <child link="base_link"/>
      <origin xyz="0 ${wheel_separation_y} 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
  </joint>
  <joint name="right_track_driver_joint" type="continuous">
      <parent link="base_link"/>
      <child link="base_link"/>
      <origin xyz="0 -${wheel_separation_y} 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
  </joint>
  -->

  <!-- ==================== ros2_control ==================== -->
  <!-- (仍然注释掉)
  <ros2_control name="TrackedBotHardware" type="system">
    ...
  </ros2_control>
  -->

  <!-- ====================== Gazebo ==================== -->
  <gazebo>
     <!-- (如果需要，以后添加 gazebo_ros2_control 插件) -->
  </gazebo>

  <!-- Gazebo 物理属性 -->
  <gazebo reference="left_sprocket_front">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
   <gazebo reference="left_sprocket_back">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="right_sprocket_front">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
   <gazebo reference="right_sprocket_back">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="left_road_wheel_1">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="left_road_wheel_2">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="left_road_wheel_3">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
   <gazebo reference="right_road_wheel_1">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="right_road_wheel_2">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
  <gazebo reference="right_road_wheel_3">
    <mu1>1.0</mu1> <mu2>1.0</mu2> <material>Gazebo/DarkGrey</material>
  </gazebo>
   <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

</robot> 